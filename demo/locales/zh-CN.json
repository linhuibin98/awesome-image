{
  "attrs": {
    "name": "参数",
    "initIndex": "初始图片索引",
    "autoPlay": "自动播放",
    "interval": "自动播放间隔",
    "transition": "过渡效果",
    "image": "父组件 AsImage 传递的已加载的图片资源",
    "depth": "原图片对应的深度图，可以使用MiDaS生成"
  },
  "desc": "说明",
  "type": "类型",
  "optional": "可选值",
  "default": "默认值",

  

  "event": {
    "name": "事件",
    "callback": "回调参数",
    "change": {
      "desc": "切换时触发",
      "params": "目前激活的幻灯片的索引，原幻灯片的索引"
    }
  },
  

  "method": {
    "name": "方法",
    "params": "参数",
    "setActiveItem": {
      "desc": "手动切换幻灯片",
      "params": "需要切换的幻灯片的索引，从 0 开始"
    },
    "prev": {
      "desc": "切换至上一张幻灯片",
      "params": "-"
    },
    "next": {
      "desc": "切换至下一张幻灯片",
      "params": "-"
    }
  },
  "usage": {
    "basic": "基本用法",
    "desc": "安装 awesome-vue-image/as-image awesome-vue-image/as-image-group AsImage 作为 AsImageGroup slot中子组件使用，并将AsImageGroup scoped 函数 toGroupWithIndex 调用（以image索引为参数）后，绑定到image 属性to-group上，完成图片资源传递，示例如下：",
    "transition": {
      "buildin": "内置过渡",
      "custom": "自定义过渡",
      "customHow": "编写shader，可配置uniform变量",
      "gl": "你可以直接使用gl-transition中的过渡效果",
      "uniform": "内置uniform变量"
    },
    "fake3d": {
      "usage": "安装 {0} {1}，Fake3d作为AsImage 的 webglfilter slot 内容组件，并传递image变量。同时传递深度图片。"
    },
    "glitch": {
      "usage": "安装 {0} {1}，Fake3d作为AsImage 的 webglfilter slot 内容组件，并传递image变量。"
    }
  },
  "webglFilter": {
    "title": "WebGL滤镜",
    "description": "用鼠标在图片上移动查看伪3D效果"
  },
  "buildInFilter": "内置WebGL滤镜",
  "customFilter": {
    "title": "自定义WebGL滤镜",
    "how": "参考 {0}，你可以使用 {1} （面向UI的微内核 14kb、可扩展WebGL框架） 完成webgl部分渲染、动画、uniform上传等功能"
  },
  "transition": {
    "title": "轮播过渡",
    "description": "可自定义的轮播图过渡效果"
  },
  "info": {
    "feature": {
      "title": "特性"
    },
    "lazyload": {
      "title": "懒加载",
      "desc": "分别自定义图片和placeholder加载时机"
    },
    "responsive": {
      "title": "响应式加载",
      "desc": "根据屏幕宽度加载不同尺寸图片"
    },
    "progressive": {
      "title": "渐进式加载",
      "desc": "加载宽度为48px模糊缩率图作为placeholder，并且加载过程平滑过渡"
    },
    "webp": {
      "title": "webp 兼容",
      "desc": "使用不支持自动webp的图片服务时，可以使用autoWebp参数添加webp兼容写法"
    },
    "service": {
      "title": "自定义图片处理",
      "desc": "内置fastly、upyun等图片处理规则，可自由定制其他图片url转换函数"
    },
    "filter": {
      "title": "WebGL滤镜",
      "desc": "可以在图片组件AsImage内使用滤镜组件，自定义webgl图片处理效果"
    },
    "swiper": {
      "title": "轮播过渡",
      "desc": "可以使用轮播图片组件AsImageGroup，自定义webgl图片过渡效果"
    }
  },
  "demo": {
    "basic": {
      "title": "懒加载 / 响应式加载 / 渐进式加载 / webp 兼容",
      "desc": "使用dev tools 网络选项卡查看加载效果"
    }
  }
}